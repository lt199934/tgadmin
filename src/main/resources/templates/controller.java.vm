package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.tg.admin.config.Auth;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;

import com.tg.admin.common.Result;
import io.swagger.annotations.ApiOperation;

import java.util.List;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@Api(tags = "$!{table.comment}相关接口")
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName} {

@Resource
private ${table.serviceName} ${table.entityPath}Service;

/**
 * 查询所有接口
 * @return
 */
@ApiOperation(value = "$!{table.comment}查询所有接口", notes = "查询所有接口")
@GetMapping
public Result<T> findAll(){
        return Result.success(${table.entityPath}Service.list());
        }

/**
 * 根据id查询数据接口
 * @param id
 * @return
 */
@ApiOperation(value = "$!{table.comment}查更具id查询", notes = "根据id查询数据接口")
@GetMapping("/{id}")
public Result<T> findOne(@PathVariable Integer id){
        return Result.success(${table.entityPath}Service.getById(id));
        }

/**
 * 分页查询接口
 * @param pageNum
 * @param pageSize
 * @return
 */
@ApiOperation(value = "$!{table.comment}分页查询接口", notes = "分页查询接口")
@GetMapping("/page")
public Result<T> findPage(@RequestParam Integer pageNum,@RequestParam Integer pageSize){
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<>();
        return Result.success(${table.entityPath}Service.page(new Page<>(pageNum,pageSize),queryWrapper));
        }

/**
 * 新增和更新接口
 * @param
 * @return
 */
@ApiOperation(value = "$!{table.comment}新增和更新接口", notes = "新增和更新接口")
@PostMapping
public Result<T> save(@RequestBody ${entity} ${table.entityPath}){
    ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        return Result.success();
        }

/**
 * 删除接口
 * @param id
 * @return
 */
@ApiOperation(value = "$!{table.comment}删除接口", notes = "删除接口")
@DeleteMapping("/{id}")
public Result<T> delete(@PathVariable Integer id){
    ${table.entityPath}Service.removeById(id);
        return Result.success();
        }

/**
 * 批量删除接口
 * @param ids
 * @return
 */
@ApiOperation(value = "$!{table.comment}批量删除接口", notes = "批量删除接口")
@PostMapping("/del/batch")
public Result<T> deleteBatch(@RequestBody List<Integer> ids){
    ${table.entityPath}Service.removeByIds(ids);
        return Result.success();
        }
        }