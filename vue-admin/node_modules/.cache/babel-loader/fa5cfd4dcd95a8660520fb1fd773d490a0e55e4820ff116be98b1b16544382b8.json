{"ast":null,"code":"export default {\n  name: \"Person\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        },\n        shortcuts: [{\n          text: '今天',\n          onClick(picker) {\n            picker.$emit('pick', new Date());\n          }\n        }, {\n          text: '昨天',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周前',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', date);\n          }\n        }]\n      },\n      sexes: [{\n        value: 0,\n        label: '女'\n      }, {\n        value: 1,\n        label: '男'\n      }],\n      statuses: [{\n        value: 0,\n        label: '正常'\n      }, {\n        value: 1,\n        label: '异常'\n      }, {\n        value: 2,\n        label: '已注销'\n      }]\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.request.get(\"/user/person\").then(res => {\n        if (res.code === '200') {\n          this.form = res.data;\n          res.token = JSON.parse(localStorage.getItem(\"user\")).token;\n          localStorage.setItem(\"user\", JSON.stringify(res));\n        }\n      });\n    },\n    handleSave() {\n      this.request.post(\"/user\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"更新成功\");\n          // 触发父级获取最新数据\n          this.$emit(\"refreshUser\");\n          this.load();\n        } else if (res.code === '550') {\n          this.$message.warning(res.msg);\n        } else {\n          this.$message.error(\"更新失败\");\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatarUrl = res.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","pickerOptions","disabledDate","time","getTime","Date","now","shortcuts","text","onClick","picker","$emit","date","setTime","sexes","value","label","statuses","created","load","methods","request","get","then","res","code","token","setItem","stringify","handleSave","post","$message","success","warning","msg","error","handleAvatarSuccess","avatarUrl"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px;border: 1px solid #ccc\">\r\n    <el-form :model=\"form\" label-width=\"80px\" size=\"small\">\r\n      <el-upload\r\n          class=\"avatar-uploader\"\r\n          action=\"http://localhost:8080/file/upload\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n          >\r\n        <img v-if=\"form.avatarUrl\" :src=\"form.avatarUrl\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"form.username\" autocomplete=\"off\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"昵称\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\">\r\n        <el-select v-model=\"form.sex\" placeholder=\"请选择性别\" clearable>\r\n          <el-option\r\n              v-for=\"item in sexes\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"年龄\">\r\n        <el-date-picker\r\n            v-model=\"form.age\"\r\n            align=\"right\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            :picker-options=\"pickerOptions\"\r\n            clearable>\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\">\r\n        <el-input  type=\"textarea\" v-model=\"form.address\" autocomplete=\"off\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\">\r\n        <el-select v-model=\"form.status\" placeholder=\"用户状态\" clearable>\r\n          <el-option\r\n              v-for=\"item in statuses\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSave\">更 新</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Person\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() > Date.now();\r\n        },\r\n        shortcuts: [{\r\n          text: '今天',\r\n          onClick(picker) {\r\n            picker.$emit('pick', new Date());\r\n          }\r\n        }, {\r\n          text: '昨天',\r\n          onClick(picker) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n            picker.$emit('pick', date);\r\n          }\r\n        }, {\r\n          text: '一周前',\r\n          onClick(picker) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', date);\r\n          }\r\n        }]\r\n      },\r\n      sexes: [{\r\n        value: 0,\r\n        label: '女'\r\n      }, {\r\n        value: 1,\r\n        label: '男'\r\n      }],\r\n      statuses: [{\r\n        value: 0,\r\n        label: '正常'\r\n      }, {\r\n        value: 1,\r\n        label: '异常'\r\n      }, {\r\n        value: 2,\r\n        label: '已注销'\r\n      }],\r\n    }\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.request.get(\"/user/person\").then(res => {\r\n        if (res.code === '200') {\r\n          this.form = res.data;\r\n          res.token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n          localStorage.setItem(\"user\",JSON.stringify(res));\r\n        }\r\n      })\r\n    },\r\n    handleSave() {\r\n      this.request.post(\"/user\", this.form).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"更新成功\");\r\n          // 触发父级获取最新数据\r\n          this.$emit(\"refreshUser\");\r\n          this.load();\r\n        } else if(res.code === '550'){\r\n          this.$message.warning(res.msg);\r\n        }else {\r\n          this.$message.error(\"更新失败\");\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess (res) {\r\n      this.form.avatarUrl = res.data;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-uploader {\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 128px;\r\n  height: 128px;\r\n  line-height: 128px;\r\n  text-align: center;\r\n}\r\n\r\n.avatar {\r\n  width: 128px;\r\n  height: 128px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":"AA8DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,aAAA;QACAC,aAAAC,IAAA;UACA,OAAAA,IAAA,CAAAC,OAAA,KAAAC,IAAA,CAAAC,GAAA;QACA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACAA,MAAA,CAAAC,KAAA,aAAAN,IAAA;UACA;QACA;UACAG,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAE,IAAA,OAAAP,IAAA;YACAO,IAAA,CAAAC,OAAA,CAAAD,IAAA,CAAAR,OAAA;YACAM,MAAA,CAAAC,KAAA,SAAAC,IAAA;UACA;QACA;UACAJ,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAE,IAAA,OAAAP,IAAA;YACAO,IAAA,CAAAC,OAAA,CAAAD,IAAA,CAAAR,OAAA;YACAM,MAAA,CAAAC,KAAA,SAAAC,IAAA;UACA;QACA;MACA;MACAE,KAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAC,QAAA;QACAF,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,KAAAE,OAAA,CAAAC,GAAA,iBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAA9B,IAAA,GAAA6B,GAAA,CAAA9B,IAAA;UACA8B,GAAA,CAAAE,KAAA,GAAA3B,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,UAAA4B,KAAA;UACA7B,YAAA,CAAA8B,OAAA,SAAA5B,IAAA,CAAA6B,SAAA,CAAAJ,GAAA;QACA;MACA;IACA;IACAK,WAAA;MACA,KAAAR,OAAA,CAAAS,IAAA,eAAAnC,IAAA,EAAA4B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAM,QAAA,CAAAC,OAAA;UACA;UACA,KAAArB,KAAA;UACA,KAAAQ,IAAA;QACA,WAAAK,GAAA,CAAAC,IAAA;UACA,KAAAM,QAAA,CAAAE,OAAA,CAAAT,GAAA,CAAAU,GAAA;QACA;UACA,KAAAH,QAAA,CAAAI,KAAA;QACA;MACA;IACA;IACAC,oBAAAZ,GAAA;MACA,KAAA7B,IAAA,CAAA0C,SAAA,GAAAb,GAAA,CAAA9B,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}