{"ast":null,"code":"export default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: \"Menu\",\n  data() {\n    return {\n      total: 0,\n      pageNum: 1,\n      pageSize: 5,\n      name: '',\n      ok: '',\n      title: '',\n      success: '',\n      error: '',\n      tableData: [],\n      multipleSelection: [],\n      form: {},\n      dialogFormVisible: false,\n      icons: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.request.get(\"/menu\", {\n        params: {\n          \"name\": this.name\n        }\n      }).then(resp => {\n        console.log(resp);\n        this.tableData = resp.data;\n      });\n      this.request.get(\"/dict/icons\").then(resp => {\n        console.log(resp);\n        this.icons = resp.data;\n      });\n    },\n    handleSave() {\n      this.request.post(\"/menu\", this.form).then(res => {\n        if (res.data) {\n          this.$message.success(this.success);\n          this.dialogFormVisible = false;\n          this.refreshMenu(\"ROLE_ADMIN\");\n          this.load();\n        } else {\n          this.$message.error(this.error);\n        }\n      });\n    },\n    refreshMenu(role) {\n      let data = {\n        \"role\": role\n      };\n      this.request.post(\"/menu/refresh\", data).then(res => {\n        localStorage.setItem(\"menus\", JSON.stringify(res.data));\n      });\n    },\n    handleAdd(pid) {\n      this.dialogFormVisible = true;\n      this.title = '菜单信息';\n      this.ok = '保 存';\n      this.success = '添加成功';\n      this.error = '添加失败';\n      this.form = {};\n      if (pid) {\n        this.form.pid = pid;\n      }\n    },\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    handleEdit(row) {\n      console.log(row);\n      this.form = row;\n      this.title = '修改信息';\n      this.ok = '更 新';\n      this.success = '更新成功';\n      this.error = '更新失败';\n      this.dialogFormVisible = true;\n    },\n    handleDelete(id) {\n      console.log(id);\n      this.request.delete(\"/menu/\" + id).then(res => {\n        if (res.data) {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    handleDeleteBatch() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.warning(\"请先选择要批量删除的内容\");\n        return;\n      }\n      for (let i = 0; i < this.multipleSelection.length; i++) {\n        if (this.multipleSelection[i].status !== 2) {\n          this.multipleSelection[i].status = 2;\n        } else {\n          this.$message.warning(\"用户\" + this.multipleSelection[i].username + \"已注销！！请勿重新注销！！\");\n        }\n      }\n      let data = this.multipleSelection.map(item => {\n        return {\n          id: item.id,\n          status: item.status\n        };\n      });\n      console.log(data);\n      this.request.post(\"/menu/batch\", data).then(res => {\n        if (res.data) {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n      console.log(this.multipleSelection);\n    },\n    reset() {\n      this.name = \"\";\n      this.load();\n    },\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageSize = val;\n      this.load();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.load();\n    }\n  }\n};","map":{"version":3,"names":["name","data","total","pageNum","pageSize","ok","title","success","error","tableData","multipleSelection","form","dialogFormVisible","icons","created","load","methods","request","get","params","then","resp","console","log","handleSave","post","res","$message","refreshMenu","role","localStorage","setItem","JSON","stringify","handleAdd","pid","handleSelectionChange","val","handleEdit","row","handleDelete","id","delete","handleDeleteBatch","length","warning","i","status","username","map","item","reset","handleSizeChange","handleCurrentChange"],"sources":["src/views/Menu.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--        搜索工具-->\r\n    <div class=\"p-10\">\r\n      <el-input style=\"width: 200px\" placeholder=\"请输入名称\" v-model=\"name\" suffix-icon=\"el-icon-search\"\r\n                clearable></el-input>\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n      <el-button class=\"ml-5\" type=\"info\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n    <!--        工具栏-->\r\n    <div class=\"p-10\">\r\n      <el-button type=\"success\" icon=\"el-icon-plus\" @click=\"handleAdd()\">增加</el-button>\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='好的'\r\n          cancel-button-text='不用了'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          title=\"您确定删除吗？\"\r\n          @confirm=\"handleDeleteBatch\"\r\n      >\r\n        <el-button type=\"danger\" icon=\"el-icon-remove-outline\" slot=\"reference\">批量删除</el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n    <!--    数据-->\r\n    <el-table :data=\"tableData\" style=\"width: 100%\" stripe\r\n              row-key=\"id\" default-expand-all\r\n              @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" sortable></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"菜单名称\" sortable></el-table-column>\r\n      <el-table-column prop=\"path\" label=\"菜单路径\"></el-table-column>\r\n      <el-table-column prop=\"component\" label=\"菜单组件\"></el-table-column>\r\n      <el-table-column prop=\"icon\" label=\"菜单图标\" class-name=\"fs-24\" align=\"center\" label-class-name=\"fs-12\">\r\n        <template slot-scope=\"scope\">\r\n          <i :class=\"scope.row.icon\" style=\"font-size:18px \"></i>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"备注\" sortable></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"mini\"\r\n              icon=\"el-icon-edit\"\r\n              type=\"success\"\r\n              @click=\"handleEdit(scope.row)\">编辑\r\n          </el-button>\r\n          <el-button\r\n              size=\"mini\"\r\n              icon=\"el-icon-plus\"\r\n              type=\"warning\"\r\n              @click=\"handleAdd(scope.row.id)\">增加\r\n          </el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='好的'\r\n              cancel-button-text='不用了'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              title=\"您确定删除吗？\"\r\n              @confirm=\"handleDelete(scope.row.id)\"\r\n          >\r\n            <el-button\r\n                size=\"mini\"\r\n                icon=\"el-icon-delete\"\r\n                type=\"danger\"\r\n                slot=\"reference\"\r\n            >删除\r\n            </el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--     dialog弹出框   -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" width=\"25%\">\r\n      <el-form :model=\"form\" label-width=\"70px\" size=\"small\">\r\n        <el-form-item label=\"父级菜单\">\r\n          <el-input v-model=\"form.pid\" autocomplete=\"off\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"显示排序\">\r\n          <el-input-number v-model=\"form.id\" :min=\"1\" autocomplete=\"off\" clearable></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单路径\">\r\n          <el-input v-model=\"form.path\" autocomplete=\"off\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单组件\">\r\n          <el-input v-model=\"form.component\" autocomplete=\"off\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单图标\">\r\n          <el-select v-model=\"form.icon\" placeholder=\"请选择文件类型\" clearable style=\"width: 100%\" size=\"small\">\r\n            <el-option\r\n                v-for=\"item in icons\"\r\n                :key=\"item.value\"\r\n                :label=\"item.name\"\r\n                :value=\"item.value\">\r\n              <span type=\"info\"><i :class=\"item.value\"></i> {{ item.value }}</span>\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\">\r\n          <el-input type=\"textarea\" v-model=\"form.description\" autocomplete=\"off\" clearable></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSave\">{{ ok }}</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: \"Menu\",\r\n  data() {\r\n    return {\r\n      total: 0,\r\n      pageNum: 1,\r\n      pageSize: 5,\r\n      name: '',\r\n      ok: '',\r\n      title: '',\r\n      success: '',\r\n      error: '',\r\n      tableData: [],\r\n      multipleSelection: [],\r\n      form: {},\r\n      dialogFormVisible: false,\r\n      icons: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.request.get(\"/menu\", {\r\n        params: {\r\n          \"name\": this.name\r\n        }\r\n      }).then(resp => {\r\n        console.log(resp)\r\n        this.tableData = resp.data;\r\n      })\r\n\r\n      this.request.get(\"/dict/icons\").then(resp => {\r\n        console.log(resp)\r\n        this.icons = resp.data;\r\n      })\r\n    },\r\n    handleSave() {\r\n      this.request.post(\"/menu\", this.form).then(res => {\r\n        if (res.data) {\r\n          this.$message.success(this.success);\r\n          this.dialogFormVisible = false;\r\n          this.refreshMenu(\"ROLE_ADMIN\");\r\n          this.load();\r\n        } else {\r\n          this.$message.error(this.error);\r\n        }\r\n      })\r\n    },\r\n    refreshMenu(role) {\r\n      let data = {\"role\": role}\r\n      this.request.post(\"/menu/refresh\", data).then(res => {\r\n        localStorage.setItem(\"menus\", JSON.stringify(res.data));\r\n      });\r\n    },\r\n    handleAdd(pid) {\r\n      this.dialogFormVisible = true;\r\n      this.title = '菜单信息';\r\n      this.ok = '保 存';\r\n      this.success = '添加成功';\r\n      this.error = '添加失败';\r\n      this.form = {}\r\n      if (pid) {\r\n        this.form.pid = pid;\r\n      }\r\n    },\r\n    handleSelectionChange(val) {\r\n      console.log(val)\r\n      this.multipleSelection = val;\r\n    },\r\n    handleEdit(row) {\r\n      console.log(row);\r\n      this.form = row;\r\n      this.title = '修改信息';\r\n      this.ok = '更 新';\r\n      this.success = '更新成功';\r\n      this.error = '更新失败';\r\n      this.dialogFormVisible = true;\r\n    },\r\n    handleDelete(id) {\r\n      console.log(id);\r\n      this.request.delete(\"/menu/\" + id).then(res => {\r\n        if (res.data) {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      })\r\n    },\r\n    handleDeleteBatch() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.warning(\"请先选择要批量删除的内容\");\r\n        return;\r\n      }\r\n      for (let i = 0; i < this.multipleSelection.length; i++) {\r\n        if (this.multipleSelection[i].status !== 2) {\r\n          this.multipleSelection[i].status = 2\r\n        } else {\r\n          this.$message.warning(\"用户\" + this.multipleSelection[i].username + \"已注销！！请勿重新注销！！\");\r\n        }\r\n      }\r\n      let data = this.multipleSelection.map(item => {\r\n        return {id: item.id, status: item.status}\r\n      });\r\n      console.log(data)\r\n      this.request.post(\"/menu/batch\", data).then(res => {\r\n        if (res.data) {\r\n          this.$message.success(\"删除成功\");\r\n          this.load();\r\n        } else {\r\n          this.$message.error(\"删除失败\");\r\n        }\r\n      })\r\n      console.log(this.multipleSelection)\r\n    },\r\n    reset() {\r\n      this.name = \"\";\r\n      this.load();\r\n    },\r\n    handleSizeChange(val) {\r\n      console.log(`每页 ${val} 条`);\r\n      this.pageSize = val;\r\n      this.load();\r\n    },\r\n    handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.pageNum = val;\r\n      this.load();\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.demo-table-expand {\r\n  font-size: 0;\r\n}\r\n\r\n.demo-table-expand label {\r\n  width: 90px;\r\n  color: #99a9bf;\r\n}\r\n\r\n.demo-table-expand .el-form-item {\r\n  margin-right: 0;\r\n  margin-bottom: 0;\r\n  width: 100%;\r\n}\r\n\r\n.fs-24 {\r\n  font-size: 24px;\r\n}\r\n\r\n.fs-12 {\r\n  font-size: 12px;\r\n}\r\n</style>"],"mappings":"AAmHA;EACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;MACAJ,IAAA;MACAK,EAAA;MACAC,KAAA;MACAC,OAAA;MACAC,KAAA;MACAC,SAAA;MACAC,iBAAA;MACAC,IAAA;MACAC,iBAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,KAAAE,OAAA,CAAAC,GAAA;QACAC,MAAA;UACA,aAAAnB;QACA;MACA,GAAAoB,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACA,KAAAZ,SAAA,GAAAY,IAAA,CAAApB,IAAA;MACA;MAEA,KAAAgB,OAAA,CAAAC,GAAA,gBAAAE,IAAA,CAAAC,IAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,IAAA;QACA,KAAAR,KAAA,GAAAQ,IAAA,CAAApB,IAAA;MACA;IACA;IACAuB,WAAA;MACA,KAAAP,OAAA,CAAAQ,IAAA,eAAAd,IAAA,EAAAS,IAAA,CAAAM,GAAA;QACA,IAAAA,GAAA,CAAAzB,IAAA;UACA,KAAA0B,QAAA,CAAApB,OAAA,MAAAA,OAAA;UACA,KAAAK,iBAAA;UACA,KAAAgB,WAAA;UACA,KAAAb,IAAA;QACA;UACA,KAAAY,QAAA,CAAAnB,KAAA,MAAAA,KAAA;QACA;MACA;IACA;IACAoB,YAAAC,IAAA;MACA,IAAA5B,IAAA;QAAA,QAAA4B;MAAA;MACA,KAAAZ,OAAA,CAAAQ,IAAA,kBAAAxB,IAAA,EAAAmB,IAAA,CAAAM,GAAA;QACAI,YAAA,CAAAC,OAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAP,GAAA,CAAAzB,IAAA;MACA;IACA;IACAiC,UAAAC,GAAA;MACA,KAAAvB,iBAAA;MACA,KAAAN,KAAA;MACA,KAAAD,EAAA;MACA,KAAAE,OAAA;MACA,KAAAC,KAAA;MACA,KAAAG,IAAA;MACA,IAAAwB,GAAA;QACA,KAAAxB,IAAA,CAAAwB,GAAA,GAAAA,GAAA;MACA;IACA;IACAC,sBAAAC,GAAA;MACAf,OAAA,CAAAC,GAAA,CAAAc,GAAA;MACA,KAAA3B,iBAAA,GAAA2B,GAAA;IACA;IACAC,WAAAC,GAAA;MACAjB,OAAA,CAAAC,GAAA,CAAAgB,GAAA;MACA,KAAA5B,IAAA,GAAA4B,GAAA;MACA,KAAAjC,KAAA;MACA,KAAAD,EAAA;MACA,KAAAE,OAAA;MACA,KAAAC,KAAA;MACA,KAAAI,iBAAA;IACA;IACA4B,aAAAC,EAAA;MACAnB,OAAA,CAAAC,GAAA,CAAAkB,EAAA;MACA,KAAAxB,OAAA,CAAAyB,MAAA,YAAAD,EAAA,EAAArB,IAAA,CAAAM,GAAA;QACA,IAAAA,GAAA,CAAAzB,IAAA;UACA,KAAA0B,QAAA,CAAApB,OAAA;UACA,KAAAQ,IAAA;QACA;UACA,KAAAY,QAAA,CAAAnB,KAAA;QACA;MACA;IACA;IACAmC,kBAAA;MACA,SAAAjC,iBAAA,CAAAkC,MAAA;QACA,KAAAjB,QAAA,CAAAkB,OAAA;QACA;MACA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAApC,iBAAA,CAAAkC,MAAA,EAAAE,CAAA;QACA,SAAApC,iBAAA,CAAAoC,CAAA,EAAAC,MAAA;UACA,KAAArC,iBAAA,CAAAoC,CAAA,EAAAC,MAAA;QACA;UACA,KAAApB,QAAA,CAAAkB,OAAA,aAAAnC,iBAAA,CAAAoC,CAAA,EAAAE,QAAA;QACA;MACA;MACA,IAAA/C,IAAA,QAAAS,iBAAA,CAAAuC,GAAA,CAAAC,IAAA;QACA;UAAAT,EAAA,EAAAS,IAAA,CAAAT,EAAA;UAAAM,MAAA,EAAAG,IAAA,CAAAH;QAAA;MACA;MACAzB,OAAA,CAAAC,GAAA,CAAAtB,IAAA;MACA,KAAAgB,OAAA,CAAAQ,IAAA,gBAAAxB,IAAA,EAAAmB,IAAA,CAAAM,GAAA;QACA,IAAAA,GAAA,CAAAzB,IAAA;UACA,KAAA0B,QAAA,CAAApB,OAAA;UACA,KAAAQ,IAAA;QACA;UACA,KAAAY,QAAA,CAAAnB,KAAA;QACA;MACA;MACAc,OAAA,CAAAC,GAAA,MAAAb,iBAAA;IACA;IACAyC,MAAA;MACA,KAAAnD,IAAA;MACA,KAAAe,IAAA;IACA;IACAqC,iBAAAf,GAAA;MACAf,OAAA,CAAAC,GAAA,OAAAc,GAAA;MACA,KAAAjC,QAAA,GAAAiC,GAAA;MACA,KAAAtB,IAAA;IACA;IACAsC,oBAAAhB,GAAA;MACAf,OAAA,CAAAC,GAAA,SAAAc,GAAA;MACA,KAAAlC,OAAA,GAAAkC,GAAA;MACA,KAAAtB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}